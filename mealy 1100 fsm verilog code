module fsm1100(clk,rst,in,out);
  input clk,rst,in;
  output out;
  reg[1:0]cs,ns;
  parameter s0=1,s1=2,s2=3,s3=4;
  always@(posedge clk)
    if(rst)
      cs<=0;
  else
    cs<=ns;
  always@(in,cs)
    case(cs)
     
       s0:if(in) ns<=s1;else ns<=s0;
      s1:if(in) ns<=s2;else ns<=s0;
      s2:if(in) ns<=s2;else ns<=s3;
      s3:if(in) ns<=s1;else ns<=s0;
      
       
    endcase
  assign out=(cs==s3)?1'b1:1'b0;
endmodule

test bench-

`timescale 1ns/1ps
module seqfsm;
  reg clk,rst,in;
  wire out;
  fsm1100 f1(clk,rst,in,out);
  always #5 clk=~clk;
  initial begin 
    clk=0;
    rst=1;
    #5 rst=0;
  end
  initial begin
    
    
    #10 in=1;
   
    #10 in=1;
    #10 in=0;
    #10 in=0;
    #10 $finish;
  
  end
  initial begin 
    $dumpfile("fsm.vcd");
    $dumpvars(1);
  end
endmodule
