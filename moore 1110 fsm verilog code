module fsm1110(clk,rst,x,out);
  input clk,rst,x;
  output reg out;
  reg[1:0]cs,ns;
  parameter s1=0,s2=1,s3=2,s4=3;
  always@(posedge clk )
    if(rst)
      cs<=0;
  else
    cs<=ns;
  always@(*)
    begin
      if(rst)
        ns=0;
      else
    case(cs)
       s1:ns=x?s2:s1;
       s2:ns=x?s3:s1;
       s3:ns=x?s4:s1;
       s4:ns=x?s4:s1;
       default:ns=0;
     endcase
    end 
  always@(ns)
    begin
      case(ns)
        s4:out=x;
        default:out=0;
      endcase
    end
 endmodule

test bench-

`timescale 1ns/1ps
module seqfsm;
  reg clk,rst,x;
  wire out;
  fsm1110 f1(clk,rst,x,out);
  always #5 clk=~clk;
  initial begin 
    clk=0;
    rst=1;
    #5 rst=0;
  end
  initial begin
      $monitor("&t %d %d " ,$time,f1.cs,f1.ns);
    #20 x = 1;
    #10 x = 1 ;
    #10 x = 1 ;
    #10 x = 0 ;
  #50 $finish;
 end
  initial begin 
    $dumpfile("fsm.vcd");
    $dumpvars(1);
  end
endmodule
